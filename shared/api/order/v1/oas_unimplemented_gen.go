// Code generated by ogen, DO NOT EDIT.

package order_v1

import (
	"context"

	ht "github.com/ogen-go/ogen/http"
)

// UnimplementedHandler is no-op Handler which returns http.ErrNotImplemented.
type UnimplementedHandler struct{}

var _ Handler = UnimplementedHandler{}

// CancelOrder implements cancelOrder operation.
//
// Cancel order by UUID.
//
// POST /order/{order_uuid}/cancel
func (UnimplementedHandler) CancelOrder(ctx context.Context, params CancelOrderParams) (r CancelOrderRes, _ error) {
	return r, ht.ErrNotImplemented
}

// CreateOrder implements createOrder operation.
//
// Create order.
//
// POST /order
func (UnimplementedHandler) CreateOrder(ctx context.Context, req *CreateOrderRequest) (r CreateOrderRes, _ error) {
	return r, ht.ErrNotImplemented
}

// GetOrder implements getOrder operation.
//
// Get order by UUID.
//
// GET /order/{order_uuid}
func (UnimplementedHandler) GetOrder(ctx context.Context, params GetOrderParams) (r GetOrderRes, _ error) {
	return r, ht.ErrNotImplemented
}

// PayOrder implements payOrder operation.
//
// Paid order by UUID.
//
// POST /order/{order_uuid}/pay
func (UnimplementedHandler) PayOrder(ctx context.Context, req *PaymentOrderRequest, params PayOrderParams) (r PayOrderRes, _ error) {
	return r, ht.ErrNotImplemented
}

// NewError creates *UnexpectedErrorStatusCode from error returned by handler.
//
// Used for common default response.
func (UnimplementedHandler) NewError(ctx context.Context, err error) (r *UnexpectedErrorStatusCode) {
	r = new(UnexpectedErrorStatusCode)
	return r
}
