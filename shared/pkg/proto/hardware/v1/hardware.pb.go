// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: hardware/v1/hardware.proto

package hardware_v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Category int32

const (
	Category_CATEGORY_UNSPECIFIED Category = 0
	Category_CATEGORY_MOTHERBOARD Category = 1
	Category_CATEGORY_CPU         Category = 2
	Category_CATEGORY_CPU_COOLER  Category = 3
	Category_CATEGORY_PSU         Category = 4
	Category_CATEGORY_SSD         Category = 5
	Category_CATEGORY_HHD         Category = 6
	Category_CATEGORY_RAM         Category = 7
	Category_CATEGORY_VIDEO_CARD  Category = 8
	Category_CATEGORY_CASE        Category = 9
)

// Enum value maps for Category.
var (
	Category_name = map[int32]string{
		0: "CATEGORY_UNSPECIFIED",
		1: "CATEGORY_MOTHERBOARD",
		2: "CATEGORY_CPU",
		3: "CATEGORY_CPU_COOLER",
		4: "CATEGORY_PSU",
		5: "CATEGORY_SSD",
		6: "CATEGORY_HHD",
		7: "CATEGORY_RAM",
		8: "CATEGORY_VIDEO_CARD",
		9: "CATEGORY_CASE",
	}
	Category_value = map[string]int32{
		"CATEGORY_UNSPECIFIED": 0,
		"CATEGORY_MOTHERBOARD": 1,
		"CATEGORY_CPU":         2,
		"CATEGORY_CPU_COOLER":  3,
		"CATEGORY_PSU":         4,
		"CATEGORY_SSD":         5,
		"CATEGORY_HHD":         6,
		"CATEGORY_RAM":         7,
		"CATEGORY_VIDEO_CARD":  8,
		"CATEGORY_CASE":        9,
	}
)

func (x Category) Enum() *Category {
	p := new(Category)
	*p = x
	return p
}

func (x Category) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Category) Descriptor() protoreflect.EnumDescriptor {
	return file_hardware_v1_hardware_proto_enumTypes[0].Descriptor()
}

func (Category) Type() protoreflect.EnumType {
	return &file_hardware_v1_hardware_proto_enumTypes[0]
}

func (x Category) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Category.Descriptor instead.
func (Category) EnumDescriptor() ([]byte, []int) {
	return file_hardware_v1_hardware_proto_rawDescGZIP(), []int{0}
}

type GetHardwareRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uuid          string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetHardwareRequest) Reset() {
	*x = GetHardwareRequest{}
	mi := &file_hardware_v1_hardware_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHardwareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHardwareRequest) ProtoMessage() {}

func (x *GetHardwareRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hardware_v1_hardware_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHardwareRequest.ProtoReflect.Descriptor instead.
func (*GetHardwareRequest) Descriptor() ([]byte, []int) {
	return file_hardware_v1_hardware_proto_rawDescGZIP(), []int{0}
}

func (x *GetHardwareRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

type GetHardwareResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hardware      *Hardware              `protobuf:"bytes,1,opt,name=hardware,proto3" json:"hardware,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetHardwareResponse) Reset() {
	*x = GetHardwareResponse{}
	mi := &file_hardware_v1_hardware_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHardwareResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHardwareResponse) ProtoMessage() {}

func (x *GetHardwareResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hardware_v1_hardware_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHardwareResponse.ProtoReflect.Descriptor instead.
func (*GetHardwareResponse) Descriptor() ([]byte, []int) {
	return file_hardware_v1_hardware_proto_rawDescGZIP(), []int{1}
}

func (x *GetHardwareResponse) GetHardware() *Hardware {
	if x != nil {
		return x.Hardware
	}
	return nil
}

type Hardware struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uuid          string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Price         float64                `protobuf:"fixed64,4,opt,name=price,proto3" json:"price,omitempty"`
	QuantityStock int64                  `protobuf:"varint,5,opt,name=quantity_stock,json=quantityStock,proto3" json:"quantity_stock,omitempty"`
	Category      Category               `protobuf:"varint,6,opt,name=category,proto3,enum=hardware.v1.Category" json:"category,omitempty"`
	Dimensions    *Dimensions            `protobuf:"bytes,7,opt,name=dimensions,proto3" json:"dimensions,omitempty"`
	Manufacturer  *Manufacturer          `protobuf:"bytes,8,opt,name=manufacturer,proto3" json:"manufacturer,omitempty"`
	Tags          []string               `protobuf:"bytes,9,rep,name=tags,proto3" json:"tags,omitempty"`
	Metadata      map[string]*Value      `protobuf:"bytes,10,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Hardware) Reset() {
	*x = Hardware{}
	mi := &file_hardware_v1_hardware_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Hardware) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Hardware) ProtoMessage() {}

func (x *Hardware) ProtoReflect() protoreflect.Message {
	mi := &file_hardware_v1_hardware_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Hardware.ProtoReflect.Descriptor instead.
func (*Hardware) Descriptor() ([]byte, []int) {
	return file_hardware_v1_hardware_proto_rawDescGZIP(), []int{2}
}

func (x *Hardware) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Hardware) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Hardware) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Hardware) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Hardware) GetQuantityStock() int64 {
	if x != nil {
		return x.QuantityStock
	}
	return 0
}

func (x *Hardware) GetCategory() Category {
	if x != nil {
		return x.Category
	}
	return Category_CATEGORY_UNSPECIFIED
}

func (x *Hardware) GetDimensions() *Dimensions {
	if x != nil {
		return x.Dimensions
	}
	return nil
}

func (x *Hardware) GetManufacturer() *Manufacturer {
	if x != nil {
		return x.Manufacturer
	}
	return nil
}

func (x *Hardware) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Hardware) GetMetadata() map[string]*Value {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Hardware) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Hardware) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type Dimensions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Length        float64                `protobuf:"fixed64,1,opt,name=length,proto3" json:"length,omitempty"`
	Width         float64                `protobuf:"fixed64,2,opt,name=width,proto3" json:"width,omitempty"`
	Height        float64                `protobuf:"fixed64,3,opt,name=height,proto3" json:"height,omitempty"`
	Weight        float64                `protobuf:"fixed64,4,opt,name=weight,proto3" json:"weight,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Dimensions) Reset() {
	*x = Dimensions{}
	mi := &file_hardware_v1_hardware_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Dimensions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dimensions) ProtoMessage() {}

func (x *Dimensions) ProtoReflect() protoreflect.Message {
	mi := &file_hardware_v1_hardware_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dimensions.ProtoReflect.Descriptor instead.
func (*Dimensions) Descriptor() ([]byte, []int) {
	return file_hardware_v1_hardware_proto_rawDescGZIP(), []int{3}
}

func (x *Dimensions) GetLength() float64 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *Dimensions) GetWidth() float64 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Dimensions) GetHeight() float64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Dimensions) GetWeight() float64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

type Manufacturer struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Country       string                 `protobuf:"bytes,2,opt,name=country,proto3" json:"country,omitempty"`
	Website       string                 `protobuf:"bytes,3,opt,name=website,proto3" json:"website,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Manufacturer) Reset() {
	*x = Manufacturer{}
	mi := &file_hardware_v1_hardware_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Manufacturer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Manufacturer) ProtoMessage() {}

func (x *Manufacturer) ProtoReflect() protoreflect.Message {
	mi := &file_hardware_v1_hardware_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Manufacturer.ProtoReflect.Descriptor instead.
func (*Manufacturer) Descriptor() ([]byte, []int) {
	return file_hardware_v1_hardware_proto_rawDescGZIP(), []int{4}
}

func (x *Manufacturer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Manufacturer) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *Manufacturer) GetWebsite() string {
	if x != nil {
		return x.Website
	}
	return ""
}

type Value struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Kind:
	//
	//	*Value_StringValue
	//	*Value_Int64Value
	//	*Value_DoubleValue
	//	*Value_BoolValue
	Kind          isValue_Kind `protobuf_oneof:"kind"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Value) Reset() {
	*x = Value{}
	mi := &file_hardware_v1_hardware_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Value) ProtoMessage() {}

func (x *Value) ProtoReflect() protoreflect.Message {
	mi := &file_hardware_v1_hardware_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Value.ProtoReflect.Descriptor instead.
func (*Value) Descriptor() ([]byte, []int) {
	return file_hardware_v1_hardware_proto_rawDescGZIP(), []int{5}
}

func (x *Value) GetKind() isValue_Kind {
	if x != nil {
		return x.Kind
	}
	return nil
}

func (x *Value) GetStringValue() string {
	if x != nil {
		if x, ok := x.Kind.(*Value_StringValue); ok {
			return x.StringValue
		}
	}
	return ""
}

func (x *Value) GetInt64Value() int64 {
	if x != nil {
		if x, ok := x.Kind.(*Value_Int64Value); ok {
			return x.Int64Value
		}
	}
	return 0
}

func (x *Value) GetDoubleValue() float64 {
	if x != nil {
		if x, ok := x.Kind.(*Value_DoubleValue); ok {
			return x.DoubleValue
		}
	}
	return 0
}

func (x *Value) GetBoolValue() bool {
	if x != nil {
		if x, ok := x.Kind.(*Value_BoolValue); ok {
			return x.BoolValue
		}
	}
	return false
}

type isValue_Kind interface {
	isValue_Kind()
}

type Value_StringValue struct {
	StringValue string `protobuf:"bytes,1,opt,name=string_value,json=stringValue,proto3,oneof"`
}

type Value_Int64Value struct {
	Int64Value int64 `protobuf:"varint,2,opt,name=int64_value,json=int64Value,proto3,oneof"`
}

type Value_DoubleValue struct {
	DoubleValue float64 `protobuf:"fixed64,3,opt,name=double_value,json=doubleValue,proto3,oneof"`
}

type Value_BoolValue struct {
	BoolValue bool `protobuf:"varint,4,opt,name=bool_value,json=boolValue,proto3,oneof"`
}

func (*Value_StringValue) isValue_Kind() {}

func (*Value_Int64Value) isValue_Kind() {}

func (*Value_DoubleValue) isValue_Kind() {}

func (*Value_BoolValue) isValue_Kind() {}

type ListHardwaresRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filter        *HardwaresFilter       `protobuf:"bytes,1,opt,name=filter,proto3,oneof" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListHardwaresRequest) Reset() {
	*x = ListHardwaresRequest{}
	mi := &file_hardware_v1_hardware_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListHardwaresRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHardwaresRequest) ProtoMessage() {}

func (x *ListHardwaresRequest) ProtoReflect() protoreflect.Message {
	mi := &file_hardware_v1_hardware_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHardwaresRequest.ProtoReflect.Descriptor instead.
func (*ListHardwaresRequest) Descriptor() ([]byte, []int) {
	return file_hardware_v1_hardware_proto_rawDescGZIP(), []int{6}
}

func (x *ListHardwaresRequest) GetFilter() *HardwaresFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type ListHardwaresResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hardwares     []*Hardware            `protobuf:"bytes,1,rep,name=hardwares,proto3" json:"hardwares,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListHardwaresResponse) Reset() {
	*x = ListHardwaresResponse{}
	mi := &file_hardware_v1_hardware_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListHardwaresResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListHardwaresResponse) ProtoMessage() {}

func (x *ListHardwaresResponse) ProtoReflect() protoreflect.Message {
	mi := &file_hardware_v1_hardware_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListHardwaresResponse.ProtoReflect.Descriptor instead.
func (*ListHardwaresResponse) Descriptor() ([]byte, []int) {
	return file_hardware_v1_hardware_proto_rawDescGZIP(), []int{7}
}

func (x *ListHardwaresResponse) GetHardwares() []*Hardware {
	if x != nil {
		return x.Hardwares
	}
	return nil
}

type HardwaresFilter struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	Uuids                 []string               `protobuf:"bytes,1,rep,name=uuids,proto3" json:"uuids,omitempty"`
	Names                 []string               `protobuf:"bytes,2,rep,name=names,proto3" json:"names,omitempty"`
	MinPrice              float64                `protobuf:"fixed64,3,opt,name=min_price,json=minPrice,proto3" json:"min_price,omitempty"`
	MaxPrice              float64                `protobuf:"fixed64,4,opt,name=max_price,json=maxPrice,proto3" json:"max_price,omitempty"`
	QuantityStock         int64                  `protobuf:"varint,5,opt,name=quantity_stock,json=quantityStock,proto3" json:"quantity_stock,omitempty"`
	Categories            []Category             `protobuf:"varint,6,rep,packed,name=categories,proto3,enum=hardware.v1.Category" json:"categories,omitempty"`
	ManufacturerCountries []string               `protobuf:"bytes,7,rep,name=manufacturer_countries,json=manufacturerCountries,proto3" json:"manufacturer_countries,omitempty"`
	Tags                  []string               `protobuf:"bytes,8,rep,name=tags,proto3" json:"tags,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *HardwaresFilter) Reset() {
	*x = HardwaresFilter{}
	mi := &file_hardware_v1_hardware_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HardwaresFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HardwaresFilter) ProtoMessage() {}

func (x *HardwaresFilter) ProtoReflect() protoreflect.Message {
	mi := &file_hardware_v1_hardware_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HardwaresFilter.ProtoReflect.Descriptor instead.
func (*HardwaresFilter) Descriptor() ([]byte, []int) {
	return file_hardware_v1_hardware_proto_rawDescGZIP(), []int{8}
}

func (x *HardwaresFilter) GetUuids() []string {
	if x != nil {
		return x.Uuids
	}
	return nil
}

func (x *HardwaresFilter) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

func (x *HardwaresFilter) GetMinPrice() float64 {
	if x != nil {
		return x.MinPrice
	}
	return 0
}

func (x *HardwaresFilter) GetMaxPrice() float64 {
	if x != nil {
		return x.MaxPrice
	}
	return 0
}

func (x *HardwaresFilter) GetQuantityStock() int64 {
	if x != nil {
		return x.QuantityStock
	}
	return 0
}

func (x *HardwaresFilter) GetCategories() []Category {
	if x != nil {
		return x.Categories
	}
	return nil
}

func (x *HardwaresFilter) GetManufacturerCountries() []string {
	if x != nil {
		return x.ManufacturerCountries
	}
	return nil
}

func (x *HardwaresFilter) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

var File_hardware_v1_hardware_proto protoreflect.FileDescriptor

const file_hardware_v1_hardware_proto_rawDesc = "" +
	"\n" +
	"\x1ahardware/v1/hardware.proto\x12\vhardware.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"(\n" +
	"\x12GetHardwareRequest\x12\x12\n" +
	"\x04uuid\x18\x01 \x01(\tR\x04uuid\"H\n" +
	"\x13GetHardwareResponse\x121\n" +
	"\bhardware\x18\x01 \x01(\v2\x15.hardware.v1.HardwareR\bhardware\"\xd8\x04\n" +
	"\bHardware\x12\x12\n" +
	"\x04uuid\x18\x01 \x01(\tR\x04uuid\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x14\n" +
	"\x05price\x18\x04 \x01(\x01R\x05price\x12%\n" +
	"\x0equantity_stock\x18\x05 \x01(\x03R\rquantityStock\x121\n" +
	"\bcategory\x18\x06 \x01(\x0e2\x15.hardware.v1.CategoryR\bcategory\x127\n" +
	"\n" +
	"dimensions\x18\a \x01(\v2\x17.hardware.v1.DimensionsR\n" +
	"dimensions\x12=\n" +
	"\fmanufacturer\x18\b \x01(\v2\x19.hardware.v1.ManufacturerR\fmanufacturer\x12\x12\n" +
	"\x04tags\x18\t \x03(\tR\x04tags\x12?\n" +
	"\bmetadata\x18\n" +
	" \x03(\v2#.hardware.v1.Hardware.MetadataEntryR\bmetadata\x129\n" +
	"\n" +
	"updated_at\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x129\n" +
	"\n" +
	"created_at\x18\f \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x1aO\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12(\n" +
	"\x05value\x18\x02 \x01(\v2\x12.hardware.v1.ValueR\x05value:\x028\x01\"j\n" +
	"\n" +
	"Dimensions\x12\x16\n" +
	"\x06length\x18\x01 \x01(\x01R\x06length\x12\x14\n" +
	"\x05width\x18\x02 \x01(\x01R\x05width\x12\x16\n" +
	"\x06height\x18\x03 \x01(\x01R\x06height\x12\x16\n" +
	"\x06weight\x18\x04 \x01(\x01R\x06weight\"V\n" +
	"\fManufacturer\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x18\n" +
	"\acountry\x18\x02 \x01(\tR\acountry\x12\x18\n" +
	"\awebsite\x18\x03 \x01(\tR\awebsite\"\x9d\x01\n" +
	"\x05Value\x12#\n" +
	"\fstring_value\x18\x01 \x01(\tH\x00R\vstringValue\x12!\n" +
	"\vint64_value\x18\x02 \x01(\x03H\x00R\n" +
	"int64Value\x12#\n" +
	"\fdouble_value\x18\x03 \x01(\x01H\x00R\vdoubleValue\x12\x1f\n" +
	"\n" +
	"bool_value\x18\x04 \x01(\bH\x00R\tboolValueB\x06\n" +
	"\x04kind\"\\\n" +
	"\x14ListHardwaresRequest\x129\n" +
	"\x06filter\x18\x01 \x01(\v2\x1c.hardware.v1.HardwaresFilterH\x00R\x06filter\x88\x01\x01B\t\n" +
	"\a_filter\"L\n" +
	"\x15ListHardwaresResponse\x123\n" +
	"\thardwares\x18\x01 \x03(\v2\x15.hardware.v1.HardwareR\thardwares\"\xa0\x02\n" +
	"\x0fHardwaresFilter\x12\x14\n" +
	"\x05uuids\x18\x01 \x03(\tR\x05uuids\x12\x14\n" +
	"\x05names\x18\x02 \x03(\tR\x05names\x12\x1b\n" +
	"\tmin_price\x18\x03 \x01(\x01R\bminPrice\x12\x1b\n" +
	"\tmax_price\x18\x04 \x01(\x01R\bmaxPrice\x12%\n" +
	"\x0equantity_stock\x18\x05 \x01(\x03R\rquantityStock\x125\n" +
	"\n" +
	"categories\x18\x06 \x03(\x0e2\x15.hardware.v1.CategoryR\n" +
	"categories\x125\n" +
	"\x16manufacturer_countries\x18\a \x03(\tR\x15manufacturerCountries\x12\x12\n" +
	"\x04tags\x18\b \x03(\tR\x04tags*\xe3\x01\n" +
	"\bCategory\x12\x18\n" +
	"\x14CATEGORY_UNSPECIFIED\x10\x00\x12\x18\n" +
	"\x14CATEGORY_MOTHERBOARD\x10\x01\x12\x10\n" +
	"\fCATEGORY_CPU\x10\x02\x12\x17\n" +
	"\x13CATEGORY_CPU_COOLER\x10\x03\x12\x10\n" +
	"\fCATEGORY_PSU\x10\x04\x12\x10\n" +
	"\fCATEGORY_SSD\x10\x05\x12\x10\n" +
	"\fCATEGORY_HHD\x10\x06\x12\x10\n" +
	"\fCATEGORY_RAM\x10\a\x12\x17\n" +
	"\x13CATEGORY_VIDEO_CARD\x10\b\x12\x11\n" +
	"\rCATEGORY_CASE\x10\t\"\x04\b\n" +
	"\x10 2\xbb\x01\n" +
	"\x0fHardwareService\x12P\n" +
	"\vGetHardware\x12\x1f.hardware.v1.GetHardwareRequest\x1a .hardware.v1.GetHardwareResponse\x12V\n" +
	"\rListHardwares\x12!.hardware.v1.ListHardwaresRequest\x1a\".hardware.v1.ListHardwaresResponseBSZQgithub.com/azoma13/computer-assembly-service/shared/proto/hardware/v1;hardware_v1b\x06proto3"

var (
	file_hardware_v1_hardware_proto_rawDescOnce sync.Once
	file_hardware_v1_hardware_proto_rawDescData []byte
)

func file_hardware_v1_hardware_proto_rawDescGZIP() []byte {
	file_hardware_v1_hardware_proto_rawDescOnce.Do(func() {
		file_hardware_v1_hardware_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_hardware_v1_hardware_proto_rawDesc), len(file_hardware_v1_hardware_proto_rawDesc)))
	})
	return file_hardware_v1_hardware_proto_rawDescData
}

var file_hardware_v1_hardware_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_hardware_v1_hardware_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_hardware_v1_hardware_proto_goTypes = []any{
	(Category)(0),                 // 0: hardware.v1.Category
	(*GetHardwareRequest)(nil),    // 1: hardware.v1.GetHardwareRequest
	(*GetHardwareResponse)(nil),   // 2: hardware.v1.GetHardwareResponse
	(*Hardware)(nil),              // 3: hardware.v1.Hardware
	(*Dimensions)(nil),            // 4: hardware.v1.Dimensions
	(*Manufacturer)(nil),          // 5: hardware.v1.Manufacturer
	(*Value)(nil),                 // 6: hardware.v1.Value
	(*ListHardwaresRequest)(nil),  // 7: hardware.v1.ListHardwaresRequest
	(*ListHardwaresResponse)(nil), // 8: hardware.v1.ListHardwaresResponse
	(*HardwaresFilter)(nil),       // 9: hardware.v1.HardwaresFilter
	nil,                           // 10: hardware.v1.Hardware.MetadataEntry
	(*timestamppb.Timestamp)(nil), // 11: google.protobuf.Timestamp
}
var file_hardware_v1_hardware_proto_depIdxs = []int32{
	3,  // 0: hardware.v1.GetHardwareResponse.hardware:type_name -> hardware.v1.Hardware
	0,  // 1: hardware.v1.Hardware.category:type_name -> hardware.v1.Category
	4,  // 2: hardware.v1.Hardware.dimensions:type_name -> hardware.v1.Dimensions
	5,  // 3: hardware.v1.Hardware.manufacturer:type_name -> hardware.v1.Manufacturer
	10, // 4: hardware.v1.Hardware.metadata:type_name -> hardware.v1.Hardware.MetadataEntry
	11, // 5: hardware.v1.Hardware.updated_at:type_name -> google.protobuf.Timestamp
	11, // 6: hardware.v1.Hardware.created_at:type_name -> google.protobuf.Timestamp
	9,  // 7: hardware.v1.ListHardwaresRequest.filter:type_name -> hardware.v1.HardwaresFilter
	3,  // 8: hardware.v1.ListHardwaresResponse.hardwares:type_name -> hardware.v1.Hardware
	0,  // 9: hardware.v1.HardwaresFilter.categories:type_name -> hardware.v1.Category
	6,  // 10: hardware.v1.Hardware.MetadataEntry.value:type_name -> hardware.v1.Value
	1,  // 11: hardware.v1.HardwareService.GetHardware:input_type -> hardware.v1.GetHardwareRequest
	7,  // 12: hardware.v1.HardwareService.ListHardwares:input_type -> hardware.v1.ListHardwaresRequest
	2,  // 13: hardware.v1.HardwareService.GetHardware:output_type -> hardware.v1.GetHardwareResponse
	8,  // 14: hardware.v1.HardwareService.ListHardwares:output_type -> hardware.v1.ListHardwaresResponse
	13, // [13:15] is the sub-list for method output_type
	11, // [11:13] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_hardware_v1_hardware_proto_init() }
func file_hardware_v1_hardware_proto_init() {
	if File_hardware_v1_hardware_proto != nil {
		return
	}
	file_hardware_v1_hardware_proto_msgTypes[5].OneofWrappers = []any{
		(*Value_StringValue)(nil),
		(*Value_Int64Value)(nil),
		(*Value_DoubleValue)(nil),
		(*Value_BoolValue)(nil),
	}
	file_hardware_v1_hardware_proto_msgTypes[6].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_hardware_v1_hardware_proto_rawDesc), len(file_hardware_v1_hardware_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_hardware_v1_hardware_proto_goTypes,
		DependencyIndexes: file_hardware_v1_hardware_proto_depIdxs,
		EnumInfos:         file_hardware_v1_hardware_proto_enumTypes,
		MessageInfos:      file_hardware_v1_hardware_proto_msgTypes,
	}.Build()
	File_hardware_v1_hardware_proto = out.File
	file_hardware_v1_hardware_proto_goTypes = nil
	file_hardware_v1_hardware_proto_depIdxs = nil
}
